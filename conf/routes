# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                            controllers.ActivityController.activity()

# Authentication
GET         /login                       controllers.LoginController.login()
POST        /login                       controllers.LoginController.validateLogin()
GET         /register                    controllers.LoginController.register()
POST        /register                    controllers.LoginController.createUser()
GET         /logout                      controllers.LoginController.logout()

# User
GET         /users/all                   controllers.UserController.showUsers()
GET         /users/:id                   controllers.UserController.userPage(id: Int)
GET         /users/delete/:id            controllers.UserController.deleteUser(id: Int)

# Profile
GET         /profile                     controllers.UserController.showProfile()
POST        /profile/save                controllers.UserController.saveProfile()

# Questions

GET         /questions                   controllers.QuestionController.questionpage(page: Int=0)
GET         /questions/:page             controllers.QuestionController.questionpage(page: Int)
POST        /questions                   controllers.QuestionController.searchQuestion()
POST        /questions/save              controllers.QuestionController.saveQuestion()
GET         /questions/delete/:id        controllers.QuestionController.deleteQuestion(id: Int)
POST        /questions/update/:id        controllers.QuestionController.updateQuestion(id: Int)

GET         /synonyms                    controllers.QuestionController.synonymPage(questionId: Int)
POST        /synonyms/save               controllers.QuestionController.saveSynonym()

# Answers
POST        /answers/update/:id          controllers.QuestionController.updateAnswer(id: Int)
GET         /answers/delete/:id          controllers.QuestionController.deleteAnswer(id: Int)

GET         /analysis/:id                controllers.AnalysisController.analysisPageForUser(id: Int)
GET         /analysis                    controllers.AnalysisController.analysisPage()

POST        /analysis/keyword/usage      controllers.AnalysisController.keywordUsage()

#Moet later in een functie call dit is voor nu om te testen
GET         /exportChat                  controllers.AnalysisController.exportChat()

#GET         /keywordtrends                  controllers.AnalysisController.keywordTrendPage()

GET         /server                      controllers.APIController.WebSocket()

# API Calls
# Authentication header meesturen: "authentication: sha256("email" + "password")" (email en password aan elkaar)
GET         /api/login                   controllers.APIController.validateLogin()
POST        /api/context                 controllers.APIController.setChatContext()
POST        /api/rating                  controllers.APIController.setChatRating()

# Run initDB link als de db vers is of als hij net gecleared is
GET         /initDB                      controllers.LoginController.initializeDB()

# Chat calls
# POST        /chat/message                  controllers.APIController.message()

# Map static resources from the /public folder to the /assets URL path
GET         /swagger-ui                  controllers.Assets.at(path="/public/swagger-ui", file = "index.html")
GET         /swagger-ui/*file            controllers.Assets.at(path ="/public/swagger-ui", file)
GET         /assets/*file                controllers.Assets.at(path, file)

# Enable webjar based resources to be returned
GET         /webjars/*file               controllers.WebJarAssets.at(file)

# API docs route
GET         /api-docs                    controllers.ApiHelpController.getResources()
GET         /api-docs/api                controllers.ApiHelpController.getResource(path = "/api")
